// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model igdb_tokens {
  id Int @id @default(autoincrement())

  token String
  expire_at DateTime
}

model users {
  id Int @id @default(autoincrement())

  username String @unique
  email String @unique
  last_login DateTime @default(now())
  is_superuser Boolean @default(false)
  is_staff Boolean @default(false)
  is_active Boolean @default(true)
  first_name String
  last_name String
  password String
  games games[]
  games_to_import games_to_import[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model games {
  id Int @id @default(autoincrement())

  name String
  igdb_id Int
  igdb_cover_id String?
  extra Json @default("{}")
  order Int @default(10)

  playeds playeds[]

  user_id Int
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@unique([user_id, igdb_id])
}

model playeds {
  id Int @id @default(autoincrement())

  beaten Boolean
  stopped_playing_at DateTime?

  game_id Int
  game games @relation(fields: [game_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model games_to_import {
  id Int @id @default(autoincrement())

  name String
  beaten Boolean
  stopped_playing_at DateTime?
  order Int
  extra Json @default("{}")

  user_id Int
  user users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
model games_import_history {
  id Int @id @default(autoincrement())

  user_id Int
  igdb_id Int
  old_game_id Int

  created_at DateTime @default(now())
}
